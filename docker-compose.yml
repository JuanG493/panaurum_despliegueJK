services:
  frontend_app:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        - GITHUB_TOKEN=${GITHUB_TOKEN}
        - FRONTEND_REPO_URL=${FRONTEND_REPO_URL}
    container_name: ${FRONTEND_CONTAINER_NAME:-frontend_app}
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-80}:80"
    networks:
      - app_network

  backend_app:
    build:
      context: .
      dockerfile: backend/Dockerfile
      args:
        - GITHUB_TOKEN=${GITHUB_TOKEN}
        - BACKEND_REPO_URL=${BACKEND_REPO_URL}
    container_name: ${BACKEND_CONTAINER_NAME:-backend_app}
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-8000}:80"
    environment:
      - DB_HOST=mysql_db
      - DB_PORT=3306
      - DB_DATABASE=${MYSQL_DATABASE}
      - DB_USERNAME=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - app_network
    volumes:
      - ./backend/laravel.conf:/etc/apache2/sites-available/000-default.conf

  mysql_db:
    image: mysql:8.0
    container_name: ${DB_CONTAINER_NAME:-mysql_db}
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      # la linea anterior auto impirta el dump
    networks:
      - app_network

  jenkins:
    build:
      context: .
      dockerfile: jenkins.Dockerfile
    container_name: jenkins_server
    restart: unless-stopped
    privileged: true
    user: root
    ports:
      - "8080:8080"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  jenkins_home:
  db_data:
